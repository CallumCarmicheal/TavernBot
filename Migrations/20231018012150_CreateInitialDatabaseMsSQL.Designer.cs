// <auto-generated />
using System;
using CCTavern.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CCTavern.Migrations
{
    [DbContext(typeof(TavernContext))]
    [Migration("20231018012150_CreateInitialDatabaseMsSQL")]
    partial class CreateInitialDatabaseMsSQL
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CCTavern.Database.ArchivedMessage", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<decimal?>("AuthorId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool>("ContainsPrefix")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateMessageCreated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("MessageContents")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("GuildId");

                    b.ToTable("ArchivedMessages");
                });

            modelBuilder.Entity("CCTavern.Database.ArchivedTrack", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateMessageCreated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<TimeSpan>("Length")
                        .HasColumnType("time");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("Position")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("RequestedById")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("RequestedById");

                    b.ToTable("ArchivedTracks", (string)null);
                });

            modelBuilder.Entity("CCTavern.Database.CachedUser", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("CachedUsers", (string)null);
                });

            modelBuilder.Entity("CCTavern.Database.Guild", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentTrack")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool>("IsPlaying")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LastMessageStatusId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool>("LeaveAfterQueue")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MusicChannelId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("MusicChannelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NextTrack")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Prefixes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TrackCount")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Guilds", (string)null);
                });

            modelBuilder.Entity("CCTavern.Database.GuildQueueItem", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DeletedById")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("DeletedReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("Length")
                        .HasColumnType("time");

                    b.Property<decimal?>("PlaylistId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("Position")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("RequestedById")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DeletedById");

                    b.HasIndex("GuildId");

                    b.HasIndex("PlaylistId");

                    b.HasIndex("RequestedById");

                    b.ToTable("GuildQueueItems", (string)null);
                });

            modelBuilder.Entity("CCTavern.Database.GuildQueuePlaylist", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("CreatedById")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int>("PlaylistSongCount")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("GuildQueuePlaylists", (string)null);
                });

            modelBuilder.Entity("CCTavern.Database.ArchivedMessage", b =>
                {
                    b.HasOne("CCTavern.Database.CachedUser", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("CCTavern.Database.Guild", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("CCTavern.Database.ArchivedTrack", b =>
                {
                    b.HasOne("CCTavern.Database.Guild", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CCTavern.Database.CachedUser", "RequestedBy")
                        .WithMany("ArchivedTracks")
                        .HasForeignKey("RequestedById");

                    b.Navigation("Guild");

                    b.Navigation("RequestedBy");
                });

            modelBuilder.Entity("CCTavern.Database.CachedUser", b =>
                {
                    b.HasOne("CCTavern.Database.Guild", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("CCTavern.Database.GuildQueueItem", b =>
                {
                    b.HasOne("CCTavern.Database.CachedUser", "DeletedBy")
                        .WithMany("DeletedSongs")
                        .HasForeignKey("DeletedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CCTavern.Database.Guild", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CCTavern.Database.GuildQueuePlaylist", "Playlist")
                        .WithMany("Songs")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CCTavern.Database.CachedUser", "RequestedBy")
                        .WithMany("RequestedSongs")
                        .HasForeignKey("RequestedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("DeletedBy");

                    b.Navigation("Guild");

                    b.Navigation("Playlist");

                    b.Navigation("RequestedBy");
                });

            modelBuilder.Entity("CCTavern.Database.GuildQueuePlaylist", b =>
                {
                    b.HasOne("CCTavern.Database.CachedUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("CCTavern.Database.CachedUser", b =>
                {
                    b.Navigation("ArchivedTracks");

                    b.Navigation("DeletedSongs");

                    b.Navigation("RequestedSongs");
                });

            modelBuilder.Entity("CCTavern.Database.GuildQueuePlaylist", b =>
                {
                    b.Navigation("Songs");
                });
#pragma warning restore 612, 618
        }
    }
}
